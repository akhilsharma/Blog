@model BlogWebsite.Models.Author

@{
    ViewBag.Title = "Create";
}

<h2>Details</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Author</h4>
        <hr /><img src="@Url.Action("GetImage", "Authors", new { Model.UserName })" style="width: 180px;" /> 
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.FullName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control" ,@readonly="ReadOnly"} })
                @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(m => m.UserName,  new { htmlAttributes = new { @class = "form-control", @readonly = "ReadOnly" } })
                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Expertise, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Expertise, new { htmlAttributes = new { @class = "form-control" , @readonly = "ReadOnly" } })
                @Html.ValidationMessageFor(model => model.Expertise, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.About, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.About, new { htmlAttributes = new { @class = "form-control", @readonly = "ReadOnly" } })
                @Html.ValidationMessageFor(model => model.About, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                @if (Context.User.Identity.IsAuthenticated)
                {
               @Html.ActionLink("Follow", "Follow", "Authors", new { Follower = User.Identity.Name, Leader = Model.ID }, null)
                }
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index","Posts")
</div>
